[package]
name = "radix-engine-toolkit"
version = "2.2.2-dev1"
edition = "2021"
build = "build.rs"

[dependencies]
# radixdlt-scrypto dependencies.
sbor = { workspace = true, features = ["serde"] }
scrypto = { workspace = true, features = ["serde"] }
radix-common = { workspace = true, features = ["serde"] }
radix-engine = { workspace = true }
radix-engine-interface = { workspace = true }
radix-substate-store-impls = { workspace = true }
radix-substate-store-queries = { workspace = true }
radix-substate-store-interface = { workspace = true }
radix-transactions = { workspace = true }
radix-engine-toolkit-common = { workspace = true }

# Bech32 encoding and decoding of addresses. Used for the Olympia <-> Babylon
# address derivations.
bech32 = { workspace = true }

# Better macros, this is pretty much used everywhere in the toolkit's code where
# we need to use macros that are more powerful where we can concatenate idents.
paste = { workspace = true }

# The serde-json dependency without the serde dependency. This is used for the
# SBOR serialization in the `scrypto_sbor.rs` and `manifest_sbor.rs` modules and
# ONLY there. 
serde_json = { workspace = true, features = ["preserve_order"] }
serde_with = { workspace = true }

# Used by the radix engine toolkit logic for extracting the network id from the
# address strings. Pretty much used to get the network specifier from the HRP.
regex = { workspace = true }

# A crate that implements the various sbor-json formats and is used in here 
# for the serialization of the payloads.
sbor-json = { workspace = true }

# A crate we use to extend types defined outside of this crate. We use this to
# implement methods on types when we're supposed not to be able to due to the 
# same crate rules that Rust has.
extend = { workspace = true }

# A crate for improved iterators that we use to create unique iterators.
itertools = { workspace = true }

[build-dependencies]
cargo_toml = { workspace = true }

[dev-dependencies]
scrypto-test = { workspace = true }

[features]
default = []

[lib]
crate-type = ["staticlib", "cdylib", "rlib"]
